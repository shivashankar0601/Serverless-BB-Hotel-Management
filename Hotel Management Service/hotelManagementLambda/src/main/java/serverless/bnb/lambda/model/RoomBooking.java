package serverless.bnb.lambda.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.util.*;

@Setter
@Builder
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = "RoomBooking")
public class RoomBooking {

    private String id;
    private String bookingNumber;
    private String userId;
    private RoomType roomType;
    private Calendar checkIn;
    private Calendar checkOut;
    private Calendar bookingDate;
    private float amountPaid;
    private Status status;
    private List<InvoiceLine> invoiceLines = new ArrayList<>();

    @DynamoDBHashKey(attributeName = "Id")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    @DynamoDBAttribute(attributeName = "UserId")
    public String getUserId() {
        return userId;
    }

    @DynamoDBTypeConvertedEnum
    @DynamoDBAttribute(attributeName = "RoomType")
    public RoomType getRoomType() {
        return roomType;
    }

    @DynamoDBAttribute(attributeName = "CheckIn")
    public Calendar getCheckIn() {
        return checkIn;
    }

    @DynamoDBAttribute(attributeName = "CheckOut")
    public Calendar getCheckOut() {
        return checkOut;
    }

    @DynamoDBAttribute(attributeName = "BookingDate")
    public Calendar getBookingDate() {
        return bookingDate;
    }

    @DynamoDBAttribute(attributeName = "AmountPaid")
    public float getAmountPaid() {
        return amountPaid;
    }

    @DynamoDBAttribute(attributeName = "BookingNumber")
    public String getBookingNumber() {
        return bookingNumber;
    }

    @DynamoDBTypeConvertedEnum
    @DynamoDBAttribute(attributeName = "BookingStatus")
    public Status getStatus() {
        return status;
    }

    @DynamoDBAttribute(attributeName = "InvoiceLines")
    public List<InvoiceLine> getInvoiceLines() {
        return invoiceLines;
    }

    public void addInvoiceLine(InvoiceLine invoiceLine) {
        this.invoiceLines.add(invoiceLine);
    }

    public void generateBookingNumber() {
        StringBuilder sb = new StringBuilder();
        Random random = new Random();
        random.ints(100000, 999999);
        bookingNumber = sb.append(checkIn.get(Calendar.YEAR))
                .append(checkIn.get(Calendar.MONTH))
                .append(checkIn.get(Calendar.DAY_OF_MONTH))
                .append("-")
                .append(userId.substring(0,1).toUpperCase(Locale.ROOT))
                .append(random.nextInt())
                .toString();
    }

    @Override
    public String toString() {
        return "RoomBooking{" +
                "bookingNumber='" + bookingNumber + '\'' +
                ", userId='" + userId + '\'' +
                ", roomType=" + roomType +
                ", checkIn=" + checkIn +
                ", checkOut=" + checkOut +
                ", bookingDate=" + bookingDate +
                ", amountPaid=" + amountPaid +
                ", status=" + status +
                '}';
    }
}
