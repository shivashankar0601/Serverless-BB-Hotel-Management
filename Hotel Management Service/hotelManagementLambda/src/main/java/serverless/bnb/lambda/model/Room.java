package serverless.bnb.lambda.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.util.List;
import java.util.Map;

@Setter
@Builder
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = "Room")
public class Room {

    private String id;
    private RoomType roomType;
    private int numberOfBeds;
    private String roomArea;
    private Map<String, List<String>> amenities;
    private int totalRooms;
    private float price;
    private String currency;

    @DynamoDBHashKey(attributeName = "Id")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    @DynamoDBTypeConvertedEnum
    @DynamoDBAttribute(attributeName = "RoomType")
    public RoomType getRoomType() {
        return roomType;
    }

    @DynamoDBAttribute(attributeName = "NumberOfBeds")
    public int getNumberOfBeds() {
        return numberOfBeds;
    }

    @DynamoDBAttribute(attributeName = "RoomArea")
    public String getRoomArea() {
        return roomArea;
    }

    @DynamoDBAttribute(attributeName = "Amenities")
    public Map<String, List<String>> getAmenities() {
        return amenities;
    }

    @DynamoDBAttribute(attributeName = "TotalRooms")
    public int getTotalRooms() {
        return totalRooms;
    }

    @DynamoDBAttribute(attributeName = "Price")
    public float getPrice() {
        return price;
    }

    @DynamoDBAttribute(attributeName = "Currency")
    public String getCurrency() {
        return currency;
    }

    @Override
    public String toString() {
        return "Room{" +
                "id='" + id + '\'' +
                ", roomType=" + roomType +
                ", numberOfBeds=" + numberOfBeds +
                ", roomArea='" + roomArea + '\'' +
                ", amenities=" + amenities +
                ", totalRooms=" + totalRooms +
                ", price=" + price +
                ", currency='" + currency + '\'' +
                '}';
    }

}
